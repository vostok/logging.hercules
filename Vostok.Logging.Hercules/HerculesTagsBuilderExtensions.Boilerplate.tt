<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
using System;
using System.Linq;
using System.Collections.Generic;
using Vostok.Hercules.Client.Abstractions.Events;

namespace Vostok.Logging.Hercules
{
    internal static partial class HerculesTagsBuilderExtensions
    {
        private static bool TryAddPropertyOfHerculesType(this IHerculesTagsBuilder builder, string key, object value)
        {
            switch (value)
            {
<#
    foreach (var type in new [] { 
        "bool",
        "byte",
        "short",
        "int",
        "long",
        "float",
        "double",
        "Guid",
        "string"
    })
    {
#>
                case <#=type #> <#=type #>Value:
                    builder.AddValue(key, <#=type #>Value);
                    return true;

                case IEnumerable<<#=type #>> <#=type #>Enumerable:
                    if (<#=type #>Enumerable is IReadOnlyList<<#=type #>> <#=type #>List)
                        builder.AddVector(key, <#=type #>List);
                    else
                        builder.AddVector(key, <#=type #>Enumerable.ToArray());
                    return true;

<#
    }
#>
                default:
                    return false;
            }
        }
    }
}